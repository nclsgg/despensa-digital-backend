basePath: /
definitions:
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  response.APIError:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  response.APIResponse:
    properties:
      data: {}
      error:
        $ref: '#/definitions/response.APIError'
      success:
        type: boolean
    type: object
  response.LoginPayload:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  response.LoginSuccessResponse:
    properties:
      data:
        $ref: '#/definitions/response.LoginPayload'
      error:
        $ref: '#/definitions/response.APIError'
      success:
        type: boolean
    type: object
  response.MessagePayload:
    properties:
      message:
        type: string
    type: object
  response.MessageResponse:
    properties:
      data:
        $ref: '#/definitions/response.MessagePayload'
      error:
        $ref: '#/definitions/response.APIError'
      success:
        type: boolean
    type: object
  response.UserListResponseWrapper:
    properties:
      data:
        description: ideal seria []dto.UserResponse
        items: {}
        type: array
      error:
        $ref: '#/definitions/response.APIError'
      success:
        type: boolean
    type: object
  response.UserResponseWrapper:
    properties:
      data:
        description: ideal seria dto.UserResponse, mas isso evita import circular
      error:
        $ref: '#/definitions/response.APIError'
      success:
        type: boolean
    type: object
host: localhost:5310
info:
  contact:
    email: nicolasguadagno@gmail.com
    name: Nicolas Guadagno
    url: http://github.com/nclsgg
  description: API da aplicação Despensa Digital
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Despensa Digital API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: User login
      tags:
      - Authentication
  /auth/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: User logout
      tags:
      - Authentication
  /auth/refresh:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Refresh access token
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Register a new user
      tags:
      - Authentication
  /user/{id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Get user by ID
      tags:
      - User
  /user/all:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.UserListResponseWrapper'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: List all users (admin only)
      tags:
      - User
  /user/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.APIResponse'
      summary: Get current authenticated user
      tags:
      - User
swagger: "2.0"
